services:
  awsglue:
    build: ..
    command: /home/glue_user/jupyter/jupyter_start.sh
    environment:
      DISABLE_SSL: "true"
    env_file:
      - .env
    ports:
      - 4040:4040
      - 8888:8888
      - 18080:18080
      - 8998:8998
    volumes:
      - ..:/home/glue_user/workspace/aws-glue-etl-local
      - awsglue-jupyter:/home/glue_user/workspace/jupyter_workspace
    networks:
      - aws-glue-boilerplate

  localstack:
    image: localstack/localstack:1.0.3
    ports:
      - "4566:4566" # LocalStack Gateway
      - "4510-4559:4510-4559" # external services port range
    environment:
      - DEBUG=${DEBUG-}
      - PERSISTENCE=${PERSISTENCE-}
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR-}
      - LOCALSTACK_API_KEY=${LOCALSTACK_API_KEY-} # only required for Pro
      - DOCKER_HOST=unix:///var/run/docker.sock
      - SERVICES=s3
    volumes:
      - localstack:${LOCALSTACK_DATA_DIR:-/tmp/}localstack/data
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - aws-glue-boilerplate

  setup-resources:
    image: mesosphere/aws-cli:1.14.5
    entrypoint: /bin/sh -c
    command: /project/setup-resources.sh
    volumes:
      - ./localstack:/project
    environment:
      - AWS_ACCESS_KEY_ID=dummyaccess
      - AWS_SECRET_ACCESS_KEY=dummysecret
      - AWS_DEFAULT_REGION=us-east-1
    networks:
      - aws-glue-boilerplate
    depends_on:
      - localstack

  postgresql:
    image: postgres:15.2
    volumes:
      - ./postgres/initdb.d:/docker-entrypoint-initdb.d
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB_DBNAME}
      POSTGRES_USER: ${POSTGRES_DB_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_DB_PASSWORD}
    expose:
      - 5432
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aws-glue-boilerplate

  pgadmin:
    image: dpage/pgadmin4:6.11
    restart: always
    volumes:
      - ./postgres/pgadmin-bootstrap/:/pgadmin4/bootstrap/
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_SERVER_JSON_FILE: ${PGADMIN_SERVER_JSON_FILE}
    ports:
      - 5050:80
    networks:
      - aws-glue-boilerplate
    depends_on:
      - postgresql

  docdb:
    image: mongo:4
    command: --tlsMode disabled
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DOCUMENT_DB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DOCUMENT_DB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${DOCUMENT_DB_DBNAME}
      MONGO_NON_ROOT_USERNAME: ${DOCUMENT_DB_USERNAME}
      MONGO_NON_ROOT_PASSWORD: ${DOCUMENT_DB_PASSWORD}
    volumes:
      - ./docdb/initdb.d:/docker-entrypoint-initdb.d:ro
      - docdb-data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo 127.0.0.1:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - aws-glue-boilerplate

  mongo-express:
    image: mongo-express:1.0.0-alpha.4
    restart: unless-stopped
    ports:
      - 8081:8081
    depends_on:
      - docdb
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${DOCUMENT_DB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${DOCUMENT_DB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: docdb
      ME_CONFIG_MONGODB_PORT: 27017
    healthcheck:
      test: wget --quiet --tries=3 --spider http://${DOCUMENT_DB_ROOT_USERNAME}:${DOCUMENT_DB_ROOT_PASSWORD}@127.0.0.1:8081 || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - aws-glue-boilerplate

networks:
  aws-glue-boilerplate:
    driver: "bridge"

volumes:
  awsglue-jupyter:
  localstack:
  postgres-data:
  docdb-data:
